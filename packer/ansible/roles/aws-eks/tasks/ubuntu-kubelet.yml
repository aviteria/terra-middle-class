---
# download and install the module kubelet
- name: download kubelet checksum file.
  get_url:
    url: "{{ s3_kubelet_download }}.sha256"
    dest: "/tmp/kubelet.sha256"
    force_basic_auth: yes

- name: set kubelet checksum variable.
  shell: "cat /tmp/kubelet.sha256 | head -n1 | cut -d ' ' -f1"
  register: kubelet_checksum_file

- name: check exists kubelet file
  stat:
    path: '/usr/bin/kubelet'
  register: kubelet_file

- name: download kubelet shell file.
  get_url:
    url: "{{ s3_kubelet_download }}"
    dest: '/usr/bin/kubelet'
    checksum: "sha256:{{ kubelet_checksum_file.stdout }}"
    mode: 0555
    force_basic_auth: yes
  when: not kubelet_file.stat.exists

# configure kubelet service
- name: create kubelet directories if not exists.
  shell: |
    mkdir -p /var/lib/kubelet
    mkdir -p /etc/kubernetes/kubelet
    mkdir -p /etc/systemd/system/kubelet.service.d

- name: configure the file kubeconfig.
  template:
    src: 'kubelet-kubeconfig.j2'
    dest: '/var/lib/kubelet/kubeconfig'
    mode: 0644
    owner: root
    group: root

- name: configure the file kubelet config.
  template:
    src: 'kubelet-config.json.j2'
    dest: '/etc/kubernetes/kubelet/kubelet-config.json'
    mode: 0644
    owner: root
    group: root

- name: install kubelet service systemd unit file.
  template:
    src: 'kubelet.service.j2'
    dest: '/etc/systemd/system/kubelet.service'
    mode: 0644
    owner: root
    group: root

- name: disable kubelet service and demon reload.
  service:
    name: kubelet
    state: stopped
    enabled: false
  notify: 'systemd daemon-reload'
