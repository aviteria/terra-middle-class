---
# install and configure docker-ce packages.
- name: create docker certification directory if not exists.
  file:
    path: '/etc/docker/certs.d/'
    state: directory
    mode: 0444
    owner: root
    group: root
    recurse: true

- name: ensure dependencies are installed.
  apt:
    name:
      - apt-transport-https
      - gnupg-agent
      - software-properties-common
    state: present

- name: add docker apt key.
  apt_key:
    url: "{{ docker_apt_gpg_key }}"
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key

- name: add docker repository.
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true

- name: install the packages docker-ce.
  apt:
    name: ['docker-ce={{ dockerce_version }}','docker-ce-cli={{ dockercecli_version }}', 'containerd.io={{ containerdio_version }}']
    state: present

- name: docker-ce starting service and enabled.
  service:
    name: docker
    state: started
    enabled: true

- name: configure docker demon.
  template:
    src: 'docker.demon.json.j2'
    dest: '/etc/docker/daemon.json'
    mode: 0644
    owner: root
    group: root

- name: create docker service directory.
  file:
    path: '/etc/systemd/system/docker.service.d'
    state: directory

- name: configure docker environment.
  template:
    src: 'docker.environment.conf.j2'
    dest: '/etc/systemd/system/docker.service.d/environment.conf'
    force: true
    mode: 0644
    owner: root
    group: root
  notify: 'systemctl daemon-reload'

# configure cis-docker | ensure auditing is configured for Docker files and directories
- name: create sysconfig directory.
  file:
    path: '/etc/sysconfig'
    state: directory

- name: touch docker in sysconfig.
  shell: |
    touch /etc/sysconfig/docker
    chmod -R 0644 /etc/sysconfig/docker
    chown -R root:root /etc/sysconfig/docker

- name: init docker variables.
  shell: |
    DOCKER_SERVICE_PATH=$(systemctl show -p FragmentPath docker.service | cut -d"=" -f2)
    DOCKER_SOCKET_PATH=$(systemctl show -p FragmentPath docker.socket | cut -d"=" -f2)
    echo '{"docker_service_path":"'${DOCKER_SERVICE_PATH}'","docker_socket_path":"'${DOCKER_SOCKET_PATH}'"}';
  register: docker_init_vars
  ignore_errors: true
  no_log: true

- name: set docker variables.
  set_fact:
    docker_dynamic_vars: "{{ docker_init_vars.stdout | from_json }}"

- name: check dynamic variables.
  vars:
    values: |
      docker_service_path: {{ docker_dynamic_vars.docker_service_path }}
      docker_socket_path:  {{ docker_dynamic_vars.docker_socket_path }}
  debug:
    msg: "{{ values.split('\n') }}"

- name: configure docker rules.
  vars:
    docker_service_path: "{{ docker_dynamic_vars.docker_service_path }}"
    docker_socket_path: "{{ docker_dynamic_vars.docker_socket_path }}"
  template:
    src: 'docker.rules.j2'
    dest: '/etc/audit/rules.d/docker.rules'
    force: true
    mode: 0644
    owner: root
    group: root
  notify: 'daemon-reload for docker rules'
